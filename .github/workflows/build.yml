
name: build

on:
  push:
    branches:
      - main
  workflow_call:

jobs:

  tests:
    if: ${{ github.ref_type != 'tag' }}
    strategy:
      fail-fast: false
      matrix:
        os: [win32, win64, linux, mac]
        include:
          - python: 3.12
            tox: 'py312'
          - os: win32
            runner: windows-latest
          - os: win64
            runner: windows-latest
          - os: linux
            runner: ubuntu-latest
          - os: mac
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov tox
          pipx install poetry
          poetry install
      - name: Run tox
        # Make sure we pull from the test matrix
        run: tox -e ${{ matrix.tox }}-${{ matrix.os }} -c tox-build.ini
      # Upload the coverage artifact so we can combine it later
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.tox }}-${{ matrix.os }}
          path: .coverage.${{ matrix.tox }}-${{ matrix.os }}

  report:
    if: ${{ github.ref_type != 'tag' }}
    runs-on: ubuntu-latest
    # The job depends on the test job completing successfully
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      # Get the coverage artifacts from the prior jobs
      - uses: actions/download-artifact@v4
        with:
          path: coverage-artifacts
      - name: Display structure of downloaded files
        run: ls -R
      - name: Install packages
        run: |
          pip install --upgrade pip
          pip install tox
          pip install pytest
          pip install pytest-cov
      # Combine the coverages and generate the reports
      - name: Generate coverage directory
        run: |
          shopt -s dotglob
          sudo mkdir ./coverage
          sudo chmod -R u=rwx coverage-artifacts
          sudo find coverage-artifacts -mindepth 2 -type f -exec sudo mv '{}' coverage/ ';'
          sudo rm -rf coverage-artifacts
          sudo chmod -R a+rwx coverage
      - name: Display structure of files
        run: ls -R -a
      - name: Combine coverage reports
        run: coverage combine coverage
      - name: Generate reports
        run: |
          coverage report
          coverage html
      # Upload the artifacts
      - name: Upload htmlcov artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage_report
          path: htmlcov/
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: .coverage

  build:
    runs-on: ubuntu-latest
    needs: [tests, report]
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pipx install poetry
      - name: Build package
        run: poetry build


